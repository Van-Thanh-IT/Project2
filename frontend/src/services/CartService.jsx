import axiosClient from "./axiosClient";

// üõí L·∫•y gi·ªè h√†ng c·ªßa user
export const getCart = async (userId) => {
  // ‚úÖ Ki·ªÉm tra userId h·ª£p l·ªá
  if (!userId || userId === "undefined" || userId === null) {
    console.warn("‚ö†Ô∏è getCart b·ªã g·ªçi khi userId ch∆∞a s·∫µn s√†ng:", userId);
    return { items: [] }; // Tr·∫£ gi·ªè h√†ng r·ªóng ƒë·ªÉ tr√°nh l·ªói
  }

  try {
    const res = await axiosClient.get(`cart/${userId}`);
    return res.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y gi·ªè h√†ng:", error);
    throw error;
  }
};

// ‚ûï Th√™m s·∫£n ph·∫©m v√†o gi·ªè
export const addToCart = async (userId, cartItem) => {
  if (!userId || userId === "undefined") {
    console.error("‚ùå addToCart: userId kh√¥ng h·ª£p l·ªá:", userId);
    throw new Error("User ID kh√¥ng h·ª£p l·ªá");
  }

  console.log("üì¶ D·ªØ li·ªáu g·ª≠i l√™n addToCart:", userId, cartItem);

  try {
    const res = await axiosClient.post(`cart/${userId}/add`, cartItem);
    return res.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi th√™m s·∫£n ph·∫©m v√†o gi·ªè:", error);
    throw error;
  }
};

// ‚ùå X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè
export const removeCartItem = async (userId, cartItemId) => {
  if (!userId || userId === "undefined") {
    console.error("‚ùå removeCartItem: userId kh√¥ng h·ª£p l·ªá:", userId);
    throw new Error("User ID kh√¥ng h·ª£p l·ªá");
  }

  try {
    const res = await axiosClient.delete(`cart/${userId}/remove/${cartItemId}`);
    return res.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi xo√° s·∫£n ph·∫©m kh·ªèi gi·ªè:", error);
    throw error;
  }
};
